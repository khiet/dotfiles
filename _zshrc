# brew
eval "$(/opt/homebrew/bin/brew shellenv)"

# history
alias hs='fc -il 1'

export HISTFILESIZE=20000 # history size during a session
export HISTSIZE=20000 # history size at start of a session
export SAVEHIST=20000 # history size in a file
# export HISTFILE=~/.zsh_history
setopt HIST_FIND_NO_DUPS
setopt INC_APPEND_HISTORY

export XDG_DATA_HOME=$HOME/.local/share
export XDG_CONFIG_HOME=$HOME/.config
export XDG_CACHE_HOME=$HOME/.cache

export STARSHIP_CONFIG=$XDG_CONFIG_HOME/starship.toml
export RIPGREP_CONFIG_PATH=$HOME/.ripgreprc
export DEVS_HOME=$HOME/Library/CloudStorage/Dropbox/Devs

bindkey '^h' backward-delete-char

# vim mode
bindkey -v
export KEYTIMEOUT=1

# https://thevaluable.dev/zsh-install-configure-mouseless/
autoload -Uz edit-command-line
zle -N edit-command-line
bindkey -M vicmd v edit-command-line

autoload -U compinit; compinit

export EDITOR='vim'

alias ct='ctags -R .'
alias caly='cal -y'
alias public_ip='curl ipinfo.io/ip'
alias private_ip='ipconfig getifaddr en0'

# tmux
alias ta='tmux attach -t'
alias tn='tmux new -s'
alias tls='tmux ls'
alias tkill='tmux kill-session -t'

# ripgrep
alias g="rg --sort-files --hidden"
alias G="rg --sort-files --no-ignore --hidden"
alias gw="rg --sort-files -w --hidden"
function gf { rg --files --sort path | rg --regexp $1 }
function gF { rg --files --no-ignore --sort path | rg --regexp $1 }

# rails
alias be="bundle exec"
alias dc="docker compose"
alias rr="bin/rails restart"
alias rc="bin/rails console -- --nomultiline"
alias rl="tail -f -n 1000 log/development.log | lnav"
alias rlc="tail -f -n 1000 log/development.log | rg -A 10 Controller | lnav"

if which bat &>/dev/null; then
  alias cat='bat'
fi

if which exa &>/dev/null; then
  alias ls='exa'
fi

# nvim
if which nvim &>/dev/null; then
  alias vi='nvim'
  alias vim=''
  export EDITOR='nvim'
fi

# fzf
if which fzf &>/dev/null; then
  export FZF_DEFAULT_COMMAND='rg --files --hidden'
  export FZF_DEFAULT_OPTS='--height 50% --layout=reverse --no-info --border=rounded'

  [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
fi

if which tmuxinator &>/dev/null; then
  alias mux=tmuxinator
  export TMUXINATOR_CONFIG=$DEVS_HOME/tmuxinator
fi

# rbenv
if which rbenv &>/dev/null; then
  eval "$(rbenv init -)"
fi

# nvm
export NVM_DIR="$HOME/.nvm"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && . "/opt/homebrew/opt/nvm/nvm.sh" --no-use
function nvm_use {
  if [[ -f ".nvmrc" && ($(nvm current) = "system")]]; then
    nvm use 1> /dev/null
  fi
}
nvm_use
function chpwd { nvm_use }

# find and replace with rg
function gR  { rg -0 -l "$1" | AGR_FROM="$1" AGR_TO="$2" xargs -0 perl -pi -e 's/$ENV{AGR_FROM}/$ENV{AGR_TO}/g' }
function gfR { rg --files | rg --regexp "$1" | AGR_FROM="$1" AGR_TO="$2" perl -p -e 'print $_; s/$ENV{AGR_FROM}/$ENV{AGR_TO}/' | xargs -n2 mv }
function gfD { rg --files | rg --regexp "$1" | xargs rm }

function mv2 { dirname "$2" | xargs mkdir -p; mv "$1" "$2" }
function cp2 { dirname "$2" | xargs mkdir -p; cp "$1" "$2" }
# list brew dependencies
function brewls { brew list | while read cask; do echo -n $fg[blue] $cask $fg[white]; brew deps $cask | awk '{printf(" %s ", $0)}'; echo ""; done }

function rhs { LC_CTYPE=C sed -i '' -e "/$1/d" ~/.zsh_history }

function kebab    { echo  "$1" | sed 's/ /-/g' | sed -r 's/([a-z0-9])([A-Z])/\1-\2/g' | tr "[:upper:]" "[:lower:]" | sed -r "s/[,:'‘’()#\"]/-/g" | sed "s|[][-]|-|g" }
function sentence { echo  "$1" | sed 's/-/ /g' | awk -vFS="" -vOFS="" '{$1=toupper($1);print $0}' }
function sp       { sentence "$1" | pbcopy }

# git
alias gdel="git branch --merged | egrep -v '(^\*|master)' | xargs git branch -d"
function gbr { git co -b $(kebab "$1") }
function gsp { sp $(git rev-parse --abbrev-ref HEAD) }

# youtube-dl
function dl {
  if [[ $1 && $2 ]]; then
    youtube-dl -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/best' -o "~/youtube/$2.%(ext)s" $1
  elif [[ $1 ]]; then
    youtube-dl -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/best' -o '~/youtube/%(title)s-%(id)s.%(ext)s' $1
  fi
}

# postgres
export PATH="/opt/homebrew/opt/postgresql@13/bin:$PATH"

function db_restore { pg_restore --verbose --clean --no-acl --no-owner -h localhost -d $1 $DEVS_HOME/dumps/$2 }

function db_dump {
  if [[ $1 && $2 ]]; then
    pg_dump -Fc --no-acl --no-owner -h localhost $1 > $DEVS_HOME/dumps/$(kebab $(date +%b_%d_%a_%H%M)-$(kebab $2)).dump
  elif [[ $1 ]]; then
    pg_dump -Fc --no-acl --no-owner -h localhost $1 > $DEVS_HOME/dumps/$(kebab $(date +%b_%d_%a_%H%M)).dump
  else
    echo "<database> must be specified"
  fi
}

# kafka
alias rpc='docker run -p 8080:8080 -e KAFKA_BROKERS="$KAFKA_BOOTSTRAP_SERVERS" -e KAFKA_TLS_ENABLED=true -e KAFKA_SASL_ENABLED=true -e KAFKA_SASL_USERNAME="$KAFKA_SASL_USERNAME" -e KAFKA_SASL_PASSWORD="$KAFKA_SASL_PASSWORD" -e KAFKA_SASL_MECHANISM=SCRAM-SHA-512 docker.redpanda.com/vectorized/console:latest'

# starship
eval "$(starship init zsh)"
