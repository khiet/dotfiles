export XDG_DATA_HOME=$HOME/.local/share
export XDG_CONFIG_HOME=$HOME/.config
export XDG_CACHE_HOME=$HOME/.cache

eval "$(/opt/homebrew/bin/brew shellenv)"

export STARSHIP_CONFIG=$XDG_CONFIG_HOME/starship.toml
export RIPGREP_CONFIG_PATH=$HOME/.ripgreprc
export DEVS_HOME=$HOME/Dropbox/Devs

bindkey '^h' backward-delete-char

# https://thevaluable.dev/zsh-install-configure-mouseless/
autoload -Uz edit-command-line
zle -N edit-command-line
bindkey -M vicmd v edit-command-line

autoload -U compinit; compinit

export EDITOR='vim'

alias ct='ctags -R .'
alias caly='cal -y'
alias public_ip='curl ipinfo.io/ip'
alias private_ip='ipconfig getifaddr en0'

alias dc="docker compose"

if which bat &>/dev/null; then
  alias cat='bat'
fi

if which eza &>/dev/null; then
  alias ls='eza'
fi

# nvim
if which nvim &>/dev/null; then
  alias vi='nvim'
  alias vim=''
  export EDITOR='nvim'
fi

alias port="lsof -n -P -i | grep "

# find and replace with rg
function gR  { rg -0 -l "$1" | AGR_FROM="$1" AGR_TO="$2" xargs -0 perl -pi -e 's/$ENV{AGR_FROM}/$ENV{AGR_TO}/g' }
function gfR { rg --files | rg --regexp "$1" | AGR_FROM="$1" AGR_TO="$2" perl -p -e 'print $_; s/$ENV{AGR_FROM}/$ENV{AGR_TO}/' | xargs -n2 mv }
function gfD { rg --files | rg --regexp "$1" | xargs rm }

function mv2 { dirname "$2" | xargs mkdir -p; mv "$1" "$2" }
function cp2 { dirname "$2" | xargs mkdir -p; cp "$1" "$2" }
# list brew dependencies
function brewls { brew list | while read cask; do echo -n $fg[blue] $cask $fg[white]; brew deps $cask | awk '{printf(" %s ", $0)}'; echo ""; done }

function kebab    { echo  "$1" | sed 's/ /-/g' | sed -r 's/([a-z0-9])([A-Z])/\1-\2/g' | tr "[:upper:]" "[:lower:]" | sed -r "s/[,:'‘’()#\"]/-/g" | sed "s|[][-]|-|g" }
function sentence { echo  "$1" | sed 's/-/ /g' | awk -vFS="" -vOFS="" '{$1=toupper($1);print $0}' }
function sp       { sentence "$1" | pbcopy }

# git
alias gdel="git branch --merged | egrep -v '(^\*|master)' | xargs git branch -d"
function gbr { git co -b $(kebab "$1") }
function gsp { sp $(git rev-parse --abbrev-ref HEAD) }

# kafka
alias rpc='docker run -p 8080:8080 -e KAFKA_BROKERS="$KAFKA_BOOTSTRAP_SERVERS" -e KAFKA_TLS_ENABLED=true -e KAFKA_SASL_ENABLED=true -e KAFKA_SASL_USERNAME="$KAFKA_SASL_USERNAME" -e KAFKA_SASL_PASSWORD="$KAFKA_SASL_PASSWORD" -e KAFKA_SASL_MECHANISM=SCRAM-SHA-512 docker.redpanda.com/vectorized/console:latest'

eval "$(rbenv init -)"
PATH="$XDG_DATA_HOME/nvim/mason/bin:$PATH"

eval "$(starship init zsh)"
eval "$(fnm env --use-on-cd)"

# brew
export HOMEBREW_BUNDLE_NO_LOCK=1
export HOMEBREW_NO_INSTALL_CLEANUP=1

external_source_files=(
  "$HOME/dotfiles/zshrc/vi-mode.zsh"
  "$HOME/dotfiles/zshrc/ripgrep.zsh"
  "$HOME/dotfiles/zshrc/tmux.zsh"
  "$HOME/dotfiles/zshrc/tmuxinator.zsh"
  "$HOME/dotfiles/zshrc/rails.zsh"
  "$HOME/dotfiles/zshrc/youtube-dl.zsh"
  "$HOME/dotfiles/zshrc/psql.zsh"
  "$HOME/dotfiles/zshrc/aws.zsh"

  "$HOME/dotfiles/zshrc/private/psql.zsh"
)

for file in "${external_source_files[@]}"; do
  source "$file"
done
